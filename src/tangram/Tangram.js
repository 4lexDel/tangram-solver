import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';
import { Game } from "./solver/game.js";


const Tangram = forwardRef(({ }, ref) => {
    const containerRef = useRef(null);
    const canvaRef = useRef(null);

    let game = null;

    //AUTRUCHE ------------------
    const grid = [
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    ];

    const componentStyles = {
        main: {
            width: '100%',
            height: '100wh',
            backgroundImage: 'linear-gradient(#404040, black)',
            padding: 0,
        },
        canvas: {
            position: 'fixed',
            overflowX: 'hidden'
        }
    };

    useEffect(() => {
        let timeoutId;

        game = new Game(canvaRef.current, grid);

        const observerCallback = (entries) => {
            clearTimeout(timeoutId);
            timeoutId = setTimeout(() => {
                window.requestAnimationFrame(() => {
                    // console.log("RESIZE");
                    game.resize(containerRef.current.clientWidth, containerRef.current.clientHeight);
                });
            }, 100); // Debounce time
        };

        const resizeObserver = new ResizeObserver(observerCallback);

        if (containerRef.current) {
            resizeObserver.observe(containerRef.current);
        }

        return () => {
            resizeObserver.disconnect();
            clearTimeout(timeoutId);
        };
    }, [containerRef]);

    const solve = (pieceList) => {
        if (game) {
            game.solve(pieceList);
        }
    }

    useImperativeHandle(ref, () => ({
        solve,
    }), [game]);

    return (
        <div ref={containerRef} style={componentStyles.main}>
            <canvas ref={canvaRef} style={componentStyles.canvas}></canvas>
        </div>
    );
});

export default Tangram;

// const grid = [
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, 2, 2, 2, 11, 11, 11, 11, 11, 6, 6, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, 9, 5, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 9, 5, 5, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 9, 9, 5, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 4, 4, 5, 13, -1, -1, -1, 3, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 8, 12, 4, 13, 13, 3, 3, 3, 3, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 12, 12, 12, 13, 13, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 10, 12, 10, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 10, 10, 10, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1,//AUTRUCHE ------------------
// const grid = [
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
// ]; -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
//     [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
// ];

// ELEPHANT ----------------
// [
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ]
// ];
//GIRAFE-------------------------
// [
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         0,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         0,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ],
//     [
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1,
//         -1
//     ]
// ]